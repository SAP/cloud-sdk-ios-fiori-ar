//
// Generated by SwagGen with template `SwiftSAPURLSession`
// https://github.com/MarcoEidinger/SwagGen/tree/sap/Swift-SAPURLSession
//

import Foundation

internal class ReferenceAnchor: APIModel {

    public enum `Type`: String, Codable, Equatable, CaseIterable {
        case image = "image"
        case object = "object"
    }

    internal var data: String?

    internal var name: String?

    internal var physicalWidth: Double?

    internal var type: `Type`?

    internal init(data: String? = nil, name: String? = nil, physicalWidth: Double? = nil, type: `Type`? = nil) {
        self.data = data
        self.name = name
        self.physicalWidth = physicalWidth
        self.type = type
    }

    internal required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        data = try container.decodeIfPresent("data")
        name = try container.decodeIfPresent("name")
        physicalWidth = try container.decodeIfPresent("physicalWidth")
        type = try container.decodeIfPresent("type")
    }

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(data, forKey: "data")
        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(physicalWidth, forKey: "physicalWidth")
        try container.encodeIfPresent(type, forKey: "type")
    }

    internal func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ReferenceAnchor else { return false }
      guard self.data == object.data else { return false }
      guard self.name == object.name else { return false }
      guard self.physicalWidth == object.physicalWidth else { return false }
      guard self.type == object.type else { return false }
      return true
    }

    internal static func == (lhs: ReferenceAnchor, rhs: ReferenceAnchor) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
